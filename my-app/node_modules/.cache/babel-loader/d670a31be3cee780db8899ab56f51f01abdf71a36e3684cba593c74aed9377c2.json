{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Utilisateur/Documents/ADA/projets/plateforme-de-meubles/my-app/src/pages/Inscription.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Password from \"../components/Password\";\nimport Email from \"../components/Email\";\nimport ConfirmPassword from \"../components/ConfirmPassword\";\nimport NameInscription from \"../components/NameInscription\";\nimport axios from 'axios';\n\n// useState est une librairie React qui gère les \"états\" d'un composant (un état est une variable qui peut changer)\n// et qui permet de rafraîchir le composant quand l'état change\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Inscription = () => {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [firstName, setFirstName] = useState(\"\");\n  const [lastName, setLastName] = useState(\"\");\n  const handleInscriptionClick = () => {\n    if (password === confirmPassword) {\n      // TODO TODO TODO TODO TODO TODO\n      // Les mots de passe correspondent, effectuez l'inscription ici\n      // Mettre ici la requête au serveur pour enregistrer les données de l'utilisateur\n      axios.post('http://localhost:8080/inscription', {\n        firstName,\n        lastName,\n        email,\n        password\n      }).then(response => {\n        console.log(response.data);\n      }).catch(error => {\n        console.error('Le mail est déjà utilisé', error);\n        alert('Le mail est déjà utilisé');\n      });\n    } else {\n      setErrorMessage(\"Les mots de passe ne correspondent pas\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"text-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Inscription\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(NameInscription, {\n        setFirstName: setFirstName,\n        setLastName: setLastName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Email, {\n        setEmail: setEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Password, {\n        setPassword: setPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ConfirmPassword, {\n        confirmPassword: confirmPassword,\n        setConfirmPassword: setConfirmPassword\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-secondary btn-lg\",\n        onClick: handleInscriptionClick,\n        children: \"S'inscrire\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-center\",\n        children: [\"Vous avez d\\xE9j\\xE0 un compte ?\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/connexion\",\n          className: \"nav-link\",\n          id: \"signUp\",\n          children: \"Connectez-vous ici.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(Inscription, \"DGW8nivHs8+ZlHlHncMyNYyNBp4=\");\n_c = Inscription;\nexport default Inscription;\nvar _c;\n$RefreshReg$(_c, \"Inscription\");","map":{"version":3,"names":["React","useState","Link","Password","Email","ConfirmPassword","NameInscription","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","Inscription","_s","password","setPassword","confirmPassword","setConfirmPassword","errorMessage","setErrorMessage","email","setEmail","firstName","setFirstName","lastName","setLastName","handleInscriptionClick","post","then","response","console","log","data","catch","error","alert","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","id","_c","$RefreshReg$"],"sources":["/mnt/c/Users/Utilisateur/Documents/ADA/projets/plateforme-de-meubles/my-app/src/pages/Inscription.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Password from \"../components/Password\";\r\nimport Email from \"../components/Email\";\r\nimport ConfirmPassword from \"../components/ConfirmPassword\";\r\nimport NameInscription from \"../components/NameInscription\";\r\nimport axios from 'axios';\r\n\r\n// useState est une librairie React qui gère les \"états\" d'un composant (un état est une variable qui peut changer)\r\n// et qui permet de rafraîchir le composant quand l'état change\r\nconst Inscription = () => {\r\n\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n\r\n\r\n  const handleInscriptionClick = () => {\r\n    if (password === confirmPassword) {\r\n      // TODO TODO TODO TODO TODO TODO\r\n      // Les mots de passe correspondent, effectuez l'inscription ici\r\n      // Mettre ici la requête au serveur pour enregistrer les données de l'utilisateur\r\n      axios.post('http://localhost:8080/inscription', {  firstName, lastName, email, password })\r\n        .then(response => {\r\n          console.log(response.data);\r\n        })\r\n        .catch(error => {\r\n          console.error('Le mail est déjà utilisé', error);\r\n          alert ('Le mail est déjà utilisé');\r\n        });\r\n    } else {\r\n      setErrorMessage(\"Les mots de passe ne correspondent pas\");\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      <div className=\"text-center\">\r\n        <h1>Inscription</h1>\r\n        <NameInscription setFirstName={setFirstName} setLastName={setLastName} />\r\n        <Email setEmail={setEmail} />\r\n        <Password setPassword={setPassword} />\r\n        <ConfirmPassword\r\n          confirmPassword={confirmPassword}\r\n          setConfirmPassword={setConfirmPassword}\r\n        />\r\n        <button\r\n          className=\"btn btn-secondary btn-lg\"\r\n          onClick={handleInscriptionClick}\r\n        >\r\n          S'inscrire\r\n        </button>\r\n        <p className=\"text-center\">\r\n          Vous avez déjà un compte ?\r\n          <Link to=\"/connexion\" className=\"nav-link\" id=\"signUp\">\r\n            Connectez-vous ici.\r\n          </Link>\r\n        </p>\r\n        {errorMessage && <p>{errorMessage}</p>}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Inscription;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}