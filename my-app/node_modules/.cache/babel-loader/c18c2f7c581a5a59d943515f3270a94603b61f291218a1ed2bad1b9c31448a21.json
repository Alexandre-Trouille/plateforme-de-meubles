{"ast":null,"code":"var _jsxFileName = \"/mnt/c/Users/Utilisateur/Documents/ADA/projets/plateforme-de-meubles/my-app/src/pages/Connexion.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport ConnexionPassword from \"../components/ConnexionPassword\";\nimport { Link } from \"react-router-dom\";\nimport Email from \"../components/Email\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Connexion = () => {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [errorMessage, setErrorMessage] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n\n  // Appel à l'API pour obtenir les données utilisateur\n\n  const HandleConnexionClick = () => {\n    axios.get(`http://localhost:8080/user/${email}`).then(response => {\n      // On récupère la réponse sous forme d'objet. On un seul objet en fonction de l'email.\n      if (response.data && password === response.data.password) {\n        // Ici on s'assure que response.data existe, puis on compare l'input au mot de passe dans la bdd\n        setErrorMessage(\"Vous êtes connecté\");\n      } else {\n        setErrorMessage(\"Échec de la connexion, veuillez vérifier vos identifiants\");\n      }\n    }).catch(error => {\n      console.error(\"There was an error!\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Connexion\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Email, {\n      setEmail: setEmail\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ConnexionPassword, {\n      setPassword: setPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-secondary btn-lg\",\n      onClick: HandleConnexionClick,\n      children: \"Se connecter\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-center\",\n      children: [\"Vous n'avez pas de compte ?\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/inscription\",\n        className: \"nav-link\",\n        id: \"signIn\",\n        children: \"Inscrivez-vous ici.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), errorMessage && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: errorMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_s(Connexion, \"e8O/3//o8jOZXJmwGeialeIgDnk=\");\n_c = Connexion;\nexport default Connexion;\nvar _c;\n$RefreshReg$(_c, \"Connexion\");","map":{"version":3,"names":["React","useState","ConnexionPassword","Link","Email","axios","jsxDEV","_jsxDEV","Connexion","_s","password","setPassword","errorMessage","setErrorMessage","email","setEmail","HandleConnexionClick","get","then","response","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","to","id","_c","$RefreshReg$"],"sources":["/mnt/c/Users/Utilisateur/Documents/ADA/projets/plateforme-de-meubles/my-app/src/pages/Connexion.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport ConnexionPassword from \"../components/ConnexionPassword\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Email from \"../components/Email\";\r\nimport axios from \"axios\";\r\n\r\nconst Connexion = () => {\r\n  const [password, setPassword] = useState(\"\");\r\n  const [errorMessage, setErrorMessage] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n\r\n  // Appel à l'API pour obtenir les données utilisateur\r\n\r\n  const HandleConnexionClick = () => {\r\n    axios\r\n      .get(`http://localhost:8080/user/${email}`)\r\n      .then((response) => {\r\n        // On récupère la réponse sous forme d'objet. On un seul objet en fonction de l'email.\r\n        if (response.data && password === response.data.password) {\r\n          // Ici on s'assure que response.data existe, puis on compare l'input au mot de passe dans la bdd\r\n          setErrorMessage(\"Vous êtes connecté\");\r\n        } else {\r\n          setErrorMessage(\r\n            \"Échec de la connexion, veuillez vérifier vos identifiants\"\r\n          );\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"There was an error!\", error);\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"text-center\">\r\n      <h1>Connexion</h1>\r\n      <Email setEmail={setEmail} />\r\n      <ConnexionPassword setPassword={setPassword} />\r\n      <button\r\n        className=\"btn btn-secondary btn-lg\"\r\n        onClick={HandleConnexionClick}\r\n      >\r\n        Se connecter\r\n      </button>\r\n      <p className=\"text-center\">\r\n        Vous n'avez pas de compte ?\r\n        <Link to=\"/inscription\" className=\"nav-link\" id=\"signIn\">\r\n          Inscrivez-vous ici.\r\n        </Link>\r\n      </p>\r\n      {errorMessage && <p>{errorMessage}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Connexion;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,iBAAiB,MAAM,iCAAiC;AAC/D,SAASC,IAAI,QAAQ,kBAAkB;AACvC,OAAOC,KAAK,MAAM,qBAAqB;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,YAAY,EAAEC,eAAe,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAACa,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;;EAEtC;;EAEA,MAAMe,oBAAoB,GAAGA,CAAA,KAAM;IACjCX,KAAK,CACFY,GAAG,CAAE,8BAA6BH,KAAM,EAAC,CAAC,CAC1CI,IAAI,CAAEC,QAAQ,IAAK;MAClB;MACA,IAAIA,QAAQ,CAACC,IAAI,IAAIV,QAAQ,KAAKS,QAAQ,CAACC,IAAI,CAACV,QAAQ,EAAE;QACxD;QACAG,eAAe,CAAC,oBAAoB,CAAC;MACvC,CAAC,MAAM;QACLA,eAAe,CACb,2DACF,CAAC;MACH;IACF,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C,CAAC,CAAC;EACN,CAAC;EAED,oBACEf,OAAA;IAAKiB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BlB,OAAA;MAAAkB,QAAA,EAAI;IAAS;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClBtB,OAAA,CAACH,KAAK;MAACW,QAAQ,EAAEA;IAAS;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7BtB,OAAA,CAACL,iBAAiB;MAACS,WAAW,EAAEA;IAAY;MAAAe,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC/CtB,OAAA;MACEiB,SAAS,EAAC,0BAA0B;MACpCM,OAAO,EAAEd,oBAAqB;MAAAS,QAAA,EAC/B;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTtB,OAAA;MAAGiB,SAAS,EAAC,aAAa;MAAAC,QAAA,GAAC,6BAEzB,eAAAlB,OAAA,CAACJ,IAAI;QAAC4B,EAAE,EAAC,cAAc;QAACP,SAAS,EAAC,UAAU;QAACQ,EAAE,EAAC,QAAQ;QAAAP,QAAA,EAAC;MAEzD;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EACHjB,YAAY,iBAAIL,OAAA;MAAAkB,QAAA,EAAIb;IAAY;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnC,CAAC;AAEV,CAAC;AAACpB,EAAA,CA9CID,SAAS;AAAAyB,EAAA,GAATzB,SAAS;AAgDf,eAAeA,SAAS;AAAC,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}